// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShippingSystem.DAL.Models;

#nullable disable

namespace ShippingSystem.DAL.Migrations
{
    [DbContext(typeof(ShippingDBContext))]
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
    [Migration("20240704220551_v1")]
========
    [Migration("20240704135710_v1")]
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RoleID");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            BranchID = 1,
                            ConcurrencyStamp = "12345678-abcd-1234-efgh-1234567890ab",
                            Email = "john.doe@example.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = true,
                            Name = "John Doe",
                            NormalizedEmail = "JOHN.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHNDOE",
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEHR+i6B2o5nr+P2ozXdndFbYB9uEoer0e9AOslIz3/iJqjtoEie4QLXOC2ePqvG8+A==",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEMkWvyk8gco7emav7fukH4UV3CMAC5Kjzs8+Gsu6hrts6UtbHIF9t4U1glN1iCvhcg==",
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = true,
                            RoleID = 1,
                            SecurityStamp = "HBLASJQKDKDKS",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "johndoe"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "456 Oak St",
                            BranchID = 2,
                            ConcurrencyStamp = "87654321-dcba-4321-hgfe-0987654321ba",
                            Email = "jane.smith@example.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = true,
                            Name = "Jane Smith",
                            NormalizedEmail = "JANE.SMITH@EXAMPLE.COM",
                            NormalizedUserName = "JANESMITH",
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAELfpYZ4FlVFTJRFnITtF+VfBgdx3FtRap/QLYO/9uO/cPTt77aX9iQ9zgijUXRSyWA==",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEI6/K6Ls1dyUJHl/rlB3YMnYxmKeQpquVY7ko092lGrEqfCtLNDg5+20kLm/khOcgw==",
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                            PhoneNumber = "0987654321",
                            PhoneNumberConfirmed = true,
                            RoleID = 2,
                            SecurityStamp = "HJSDKFHSDFHSD",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "janesmith"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            BranchID = 1,
                            ConcurrencyStamp = "12345678-abcd-1234-efgh-1234567890ab",
                            Email = "ahmed.salah@example.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = true,
                            Name = "Ahmed Salah",
                            NormalizedEmail = "AHMED.SALAH@EXAMPLE.COM",
                            NormalizedUserName = "AHMED",
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEEk+xGZ4fH27kctrCRPkm2/3v0y8cCQ65ZX5sGktMDKOF/KCMNuO8tKFLk05X1PDKA==",
========
                            PasswordHash = "AQAAAAIAAYagAAAAENfUErMfsV7UUlHEaAgZetTOhJqeDwghEDWSTj7yHbEAEHRN5vfHff1O1U/CgHzLKA==",
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = true,
                            RoleID = 3,
                            SecurityStamp = "HBLASJQKDKDKS",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "ahmed"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            BranchID = 1,
                            ConcurrencyStamp = "12345678-abcd-1234-efgh-1234567890ab",
                            Email = "mona.magdy@example.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = true,
                            Name = "Mona Magdy",
                            NormalizedEmail = "MONA.MAGDY@EXAMPLE.COM",
                            NormalizedUserName = "MONA",
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEFFtyUx1s+D9ulB3BC9DDr6G6taEZ2anSXkopm76QskIhhl6TFQRVIfkY48rnvYTqw==",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEDLOhGKMi+OcbqTf8qexuug94iOSVOtzAEuR2lp2ny1XIagIsXlcr7REvuXVL6Ew2Q==",
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = true,
                            RoleID = 4,
                            SecurityStamp = "HBLASJQKDKDKS",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "mona"
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
========
                        },
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "123 New Street",
                            ConcurrencyStamp = "2b85fbc7-255c-4da6-9792-ade89d174171",
                            Email = "newuser@example.com",
                            EmailConfirmed = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            Name = "New User",
                            PasswordHash = "AQAAAAIAAYagAAAAEL74fjs16Wyi95vy8JjCUsN2jGfw8N7JCeSHo/ABITWucF+l8kI+haKYoO8/Scw+1w==",
                            PhoneNumberConfirmed = false,
                            RoleID = 1,
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "newuser"
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int>("GovernmentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateOnly(2024, 7, 4),
                            GovernmentID = 1,
                            IsDeleted = false,
                            Name = "Branch1",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateOnly(2024, 7, 4),
                            GovernmentID = 2,
                            IsDeleted = false,
                            Name = "Branch2",
                            Status = true
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GovernmentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("NormalShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PickupShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<decimal>("Company_Percantage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount_type")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Governments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("RoleID");

                    b.ToTable("DeliveryAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            BranchID = 1,
                            Company_Percantage = 0m,
                            ConcurrencyStamp = "12345678-abcd-1234-efgh-1234567890ab",
                            Discount_type = 0m,
                            Email = "hamdy.doe@example.com",
                            EmailConfirmed = true,
                            IsDeleted = false,
                            LockoutEnabled = true,
                            Name = "John Doe",
                            NormalizedEmail = "HAMDY.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHNDOE",
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAEL/6kxMLyDdV/8H5Y840Urdy8z+r33/PesMMRmyvJi7XQ+K778EvHH77zbzLmtgTXQ==",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEPU3CJYcaHq+94/e2msAti3UHgsvKo6oOen6/FYIAoLj5fnTQDwligsZyjKwCMHOGg==",
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = true,
                            RoleID = 3,
                            SecurityStamp = "HBLASJQKDKDKS",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "johndoe"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "التسليم في الفرع",
                            Price = 5.99m
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "التسليم من التاجر",
                            Price = 12.99m
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.ExistedEntities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Settings"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Branches"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Employees"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Merchants"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Deliveries"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Governorates"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Cities"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Orders"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Financials"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Reports"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Government", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.ToTable("Governments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Government1",
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Government2",
                            Status = false
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.MerchantAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Government")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<decimal>("Pickup_Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Refund_Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchID");

                    b.HasIndex("RoleID");

                    b.ToTable("MerchantAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "123 Main St",
                            BranchID = 1,
                            City = "City A",
                            ConcurrencyStamp = "12345678-abcd-1234-efgh-1234567890ab",
                            Email = "mariem.doe@example.com",
                            EmailConfirmed = true,
                            Government = "Government A",
                            IsDeleted = false,
                            LockoutEnabled = true,
                            Name = "John Doe",
                            NormalizedEmail = "MARIEM.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHNDOE",
<<<<<<<< HEAD:ShippingSystem.DAL/Migrations/20240704220551_v1.Designer.cs
                            PasswordHash = "AQAAAAIAAYagAAAAELuuZQ68MfwdWx7NYIw26ZXZmw+Uc8PUo3sV6SXAptdTRRw0THT3RkrbHbCkn4gQeA==",
========
                            PasswordHash = "AQAAAAIAAYagAAAAEO2iy1xMS07sB47lP+czv95WQ9MVuZNojK5spOUD2yJ0c9DZ3om/gEwDZNTNShvYIQ==",
                            Phone = "1234567890",
>>>>>>>> Mariem:ShippingSystem.DAL/Migrations/20240704135710_v1.Designer.cs
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = true,
                            Pickup_Price = 10.0m,
                            Refund_Percentage = 0.1m,
                            RoleID = 2,
                            SecurityStamp = "HBLASJQKDKDKS",
                            Status = true,
                            StoreName = "Store A",
                            TwoFactorEnabled = false,
                            UserName = "johndoe"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitytId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("DeliveryID")
                        .HasColumnType("int");

                    b.Property<decimal?>("DeliveryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeliveryTypeID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeliverydDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GovernmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PaiedMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PaymentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReceivedMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ShippingTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffMemberID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAndVillage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CitytId");

                    b.HasIndex("DeliveryID");

                    b.HasIndex("DeliveryTypeID");

                    b.HasIndex("GovernmentId");

                    b.HasIndex("MerchantID");

                    b.HasIndex("PaymentTypeID");

                    b.HasIndex("ShippingTypeID");

                    b.HasIndex("StaffMemberID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientName = "John Doe",
                            CreatedDate = new DateOnly(2024, 7, 4),
                            DeliveryPrice = 10.00m,
                            DeliveryTypeID = 1,
                            Email = "john.doe@example.com",
                            IsDeleted = false,
                            MerchantID = 1,
                            Notes = "Handle with care",
                            PaiedMoney = 40.00m,
                            PhoneOne = "1234567890",
                            PhoneTwo = "0987654321",
                            ReceivedMoney = 50.00m,
                            Status = "Pending",
                            StreetAndVillage = "123 Main St",
                            TotalPrice = 100.00m,
                            TotalWeight = 5.00m
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Visa"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("bit");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 1,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 2,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 3,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 4,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 5,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 6,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 7,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 8,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 9,
                            IsDeleted = false,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            CanCreate = false,
                            CanDelete = false,
                            CanRead = false,
                            CanWrite = false,
                            EntityId = 10,
                            IsDeleted = false,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("order_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("order_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateOnly(2024, 7, 4),
                            IsDeleted = false,
                            Name = "Employee"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateOnly(2024, 7, 4),
                            IsDeleted = false,
                            Name = "Merchant"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateOnly(2024, 7, 4),
                            IsDeleted = false,
                            Name = "Delivery"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateOnly(2024, 7, 4),
                            IsDeleted = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.ShippingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ShippingTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Normal",
                            Price = 30m
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "7 Days",
                            Price = 50m
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "24 Hour",
                            Price = 70m
                        });
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.SpecialOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DeliveryPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Government")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.ToTable("SpecialOffer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Account", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany("Accounts")
                        .HasForeignKey("BranchID");

                    b.HasOne("ShippingSystem.DAL.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Branch", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Government", "Government")
                        .WithMany()
                        .HasForeignKey("GovernmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Government");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.City", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Government", "Government")
                        .WithMany("Cities")
                        .HasForeignKey("GovernmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Government");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryAccount", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.HasOne("ShippingSystem.DAL.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Government", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.MerchantAccount", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchID");

                    b.HasOne("ShippingSystem.DAL.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Order", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.City", "city")
                        .WithMany()
                        .HasForeignKey("CitytId");

                    b.HasOne("ShippingSystem.DAL.Models.DeliveryAccount", "DeliveryAccount")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryID");

                    b.HasOne("ShippingSystem.DAL.Models.DeliveryType", "deliveryType")
                        .WithMany("Orders")
                        .HasForeignKey("DeliveryTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.Government", "government")
                        .WithMany()
                        .HasForeignKey("GovernmentId");

                    b.HasOne("ShippingSystem.DAL.Models.MerchantAccount", "MerchantAccount")
                        .WithMany("Orders")
                        .HasForeignKey("MerchantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.PaymentType", "paymentType")
                        .WithMany("orders")
                        .HasForeignKey("PaymentTypeID");

                    b.HasOne("ShippingSystem.DAL.Models.ShippingType", "ShippingType")
                        .WithMany("Orders")
                        .HasForeignKey("ShippingTypeID");

                    b.HasOne("ShippingSystem.DAL.Models.Account", "StaffMemberAccount")
                        .WithMany("Orders")
                        .HasForeignKey("StaffMemberID");

                    b.Navigation("DeliveryAccount");

                    b.Navigation("MerchantAccount");

                    b.Navigation("ShippingType");

                    b.Navigation("StaffMemberAccount");

                    b.Navigation("city");

                    b.Navigation("deliveryType");

                    b.Navigation("government");

                    b.Navigation("paymentType");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Permission", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.ExistedEntities", "Entity")
                        .WithMany("Permissions")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShippingSystem.DAL.Models.Role", "role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("role");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Product", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.Order", "order")
                        .WithMany("Products")
                        .HasForeignKey("order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.SpecialOffer", b =>
                {
                    b.HasOne("ShippingSystem.DAL.Models.MerchantAccount", "MerchantAccount")
                        .WithMany("SpecialOffer")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MerchantAccount");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Account", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Branch", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryAccount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.DeliveryType", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.ExistedEntities", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Government", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.MerchantAccount", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SpecialOffer");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.PaymentType", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.Role", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("ShippingSystem.DAL.Models.ShippingType", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
